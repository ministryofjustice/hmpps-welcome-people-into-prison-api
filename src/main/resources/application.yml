info.app:
  name: Hmpps Welcome People Into Prison Api
  version: 1.0

spring:
  application:
    name: hmpps-welcome-people-into-prison-api
  codec:
    max-in-memory-size: 10MB

  jackson:
    date-format: "yyyy-MM-dd HH:mm:ss"
    serialization:
      WRITE_DATES_AS_TIMESTAMPS: false

  jpa:
    open-in-view: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        jdbc:
          lob:
            non_contextual_creation: true
    show-sql: false
    generate-ddl: false
    hibernate:
      ddl-auto: none

  flyway:
    locations: classpath:/db/migration/postgres,classpath:/db/migration/common
    url: ${spring.datasource.url}
    user: ${spring.datasource.username}
    password: ${spring.datasource.password}
    schemas: hmmps-welcome-people-into-prison

  datasource:
    url: 'jdbc:postgresql://${database.endpoint}/${database.name}?sslmode=prefer'
    username: ${spring.datasource.username}
    password: ${spring.datasource.password}
    continue-on-error: true
    hikari:
      pool-name: WelcomePeopleIntoPrison-CP
      connectionTimeout: 1000
      validationTimeout: 500


  profiles:
    group:
      test:
        - "stdout"
        - "h2flyway"
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: ${oauth.endpoint.url}/.well-known/jwks.json
      client:
        registration:
          basm-api:
            provider: basm-auth
            client-id: ${basm.client.client-id}
            client-secret: ${basm.client.client-secret}
            authorization-grant-type: client_credentials
          prison-api:
            provider: hmpps-auth
            client-id: ${system.client.id}
            client-secret: ${system.client.secret}
            authorization-grant-type: client_credentials
            scope: read
          hmpps-auth-api:
            provider: hmpps-auth
            client-id: ${system.client.id}
            client-secret: ${system.client.secret}
            authorization-grant-type: client_credentials
            scope: read
          prisoner-search-api:
            provider: hmpps-auth
            client-id: ${system.client.id}
            client-secret: ${system.client.secret}
            authorization-grant-type: client_credentials
            scope: read
        provider:
          hmpps-auth:
            token-uri: ${oauth.endpoint.url}/oauth/token
          basm-auth:
            token-uri: ${basm.endpoint.url}/oauth/token

server:
  port: 8080
  servlet:
    context-path: /
  forward-headers-strategy: native
  tomcat:
    remoteip:
      remote-ip-header: x-forwarded-for
      protocol-header: x-forwarded-proto
      internal-proxies: 10\.\d{1,3}\.\d{1,3}\.\d{1,3}|192\.168\.\d{1,3}\.\d{1,3}|169\.254\.\d{1,3}\.\d{1,3}|127\.\d{1,3}\.\d{1,3}\.\d{1,3}|172\.1[6-9]{1}\.\d{1,3}\.\d{1,3}|172\.2[0-9]{1}\.\d{1,3}\.\d{1,3}|172\.3[0-1]{1}\.\d{1,3}\.\d{1,3}|0:0:0:0:0:0:0:1|::1|100\.6[4-9]\.\d{1,3}\.\d{1,3}|100\.[7-9][0-9]{1}\.\d{1,3}\.\d{1,3}|100\.1[0-1][0-9]{1}\.\d{1,3}\.\d{1,3}|100\.12[0-7]\.\d{1,3}\.\d{1,3}
  shutdown: graceful
  error:
    include-message: always

management:
  endpoints:
    web:
      base-path: /
      exposure:
        include: 'info, health'
  endpoint:
    health:
      cache:
        time-to-live: 2000ms
      show-components: always
      show-details: always
      probes:
        enabled: true
    info:
      cache:
        time-to-live: 2000ms
